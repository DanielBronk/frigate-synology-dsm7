name: Build and publish docker image

on:
  push:
    branches: [ main ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Docker build
    runs-on: ubuntu-22.04
    env:
      IMAGENAME: ${{ github.repository }}
      URL: "ghcr.io"
      OWNER: ${{ github.repository_owner }}
      TOKEN: ${{ secrets.PACKAGES_ACCESS_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Lowercase $OWNER
        run: echo "USER=${OWNER,,}" >>${GITHUB_ENV}
      - name: Login github packages
        run: echo $TOKEN | docker login $URL -u $USER --password-stdin
      - name: Get repo name and lowercase
        run: echo "IMAGE=$(echo ${IMAGENAME,,} | awk -F '/' '{print $2}')" >> $GITHUB_ENV
      - name: Build Docker image
        run: |
          docker build \
          -t $URL/$USER/$IMAGE:latest \
          -t $URL/$USER/$IMAGE:${GITHUB_SHA::8} \
          --label org.opencontainers.image.source=https://github.com/$IMAGENAME \
          docker/.
      - name: Publish Docker image
        if: ${{ github.event_name != 'schedule' }}
        run: docker push $URL/$USER/$IMAGE --all-tags

  # build:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: write
  #     # This is used to complete the identity challenge
  #     # with sigstore/fulcio when running outside of PRs.
  #     id-token: write

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     # Install the cosign tool except on PR
  #     # https://github.com/sigstore/cosign-installer
  #     - name: Install cosign
  #       if: github.event_name != 'pull_request'
  #       uses: sigstore/cosign-installer@9becc617647dfa20ae7b1151972e9b3a2c338a2b
  #       with:
  #         cosign-release: 'v1.12.1'

  #     # Workaround: https://github.com/docker/build-push-action/issues/461
  #     - name: Setup Docker buildx
  #       uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325

  #     # Login against a Docker registry except on PR
  #     # https://github.com/docker/login-action
  #     - name: Log into registry ${{ env.REGISTRY }}
  #       if: github.event_name != 'pull_request'
  #       uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     # Extract metadata (tags, labels) for Docker
  #     # https://github.com/docker/metadata-action
  #     - name: Extract Docker metadata
  #       id: meta
  #       uses: docker/metadata-action@507c2f2dc502c992ad446e3d7a5dfbe311567a96
  #       with:
  #         images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

  #     # Build and push Docker image with Buildx (don't push on PR)
  #     # https://github.com/docker/build-push-action
  #     - name: Build and push Docker image
  #       id: build-and-push
  #       uses: docker/build-push-action@37abcedcc1da61a57767b7588cb9d03eb57e28b3
  #       with:
  #         platforms: linux/amd64
  #         context: ./docker
  #         push: ${{ github.event_name != 'pull_request' }}
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max

  #     # Sign the resulting Docker image digest except on PRs.
  #     # This will only write to the public Rekor transparency log when the Docker
  #     # repository is public to avoid leaking data.  If you would like to publish
  #     # transparency data even for private images, pass --force to cosign below.
  #     # https://github.com/sigstore/cosign
  #     - name: Sign the published Docker image
  #       if: ${{ github.event_name != 'pull_request' }}
  #       env:
  #         COSIGN_EXPERIMENTAL: "true"
  #       # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        # run: cosign sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}
